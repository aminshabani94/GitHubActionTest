apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'jacoco'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  defaultConfig {
    applicationId "com.raywenderlich.android.rwquotes"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 9
    versionName "1.1"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    javaCompileOptions {
      annotationProcessorOptions {
        arguments = [
            "room.schemaLocation": "$projectDir/schemas".toString(),
            "room.incremental":"true"
        ]
      }
    }
    testOptions {
      unitTests.returnDefaultValues = true
    }
  }

  sourceSets {
    androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
  }

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_11
  }

  buildTypes {
    debug {
      testCoverageEnabled true
    }
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  buildFeatures {
    viewBinding true
  }

  task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    tasks.withType(Test) {
      jacoco.includeNoLocationClasses = true
      jacoco.excludes = ['jdk.internal.*']
    }

    reports {
      xml.enabled = true
      html.enabled = true
    }

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ]))
  }

  testOptions {
    unitTests.includeAndroidResources = true
    unitTests.all {
      jacoco {
        includeNoLocationClasses = true
      }
    }
    unitTests.returnDefaultValues = true
  }

  lint {
    sarifReport true
    // optional, otherwise build/reports/lint-results-debug.sarif
    sarifOutput file("lint.sarif")
  }

  lintOptions {
    fatal 'MY_LINT_CHECK_ID'
  }


}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])

  // Kotlin
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

  // Support Libraries
  implementation 'androidx.appcompat:appcompat:1.5.1'
  implementation 'androidx.constraintlayout:constraintlayout:2.2.0-alpha04'

  // App dependencies
  implementation "androidx.cardview:cardview:1.0.0"
  implementation 'com.google.android.material:material:1.7.0'
  implementation "androidx.recyclerview:recyclerview:1.2.1"
  implementation "androidx.annotation:annotation:1.5.0"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
  implementation "com.jakewharton.timber:timber:5.0.1"

  // Architecture Components
  implementation 'androidx.room:room-runtime:2.4.3'
  kapt 'androidx.room:room-compiler:2.4.3'
  implementation 'androidx.room:room-ktx:2.4.3'
  implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
  //noinspection LifecycleAnnotationProcessorWithJava8
  kapt 'androidx.lifecycle:lifecycle-compiler:2.6.0-alpha03'
  implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0-alpha03'
  implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.0-alpha03'


  // Dependencies for local unit tests
  testImplementation 'junit:junit:4.13.2'
  testImplementation "androidx.arch.core:core-testing:2.1.0"
  testImplementation 'org.mockito:mockito-inline:2.25.1'
  testImplementation "org.mockito:mockito-android:4.6.1"
  testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'

  // Dependencies for Android instrumented unit tests
  androidTestImplementation 'junit:junit:4.13.2'
  androidTestImplementation "org.mockito:mockito-android:4.6.1"
  androidTestImplementation "androidx.room:room-testing:2.5.0-beta01"
  androidTestImplementation 'androidx.test.ext:junit:1.1.3'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


  // AndroidX Test - JVM testing
  testImplementation "androidx.test:core-ktx:1.4.0"
  testImplementation "androidx.test.ext:junit:1.1.3"


  // AndroidX Test - Instrumented testing
  androidTestImplementation "androidx.test.ext:junit:1.1.2"
  androidTestImplementation "androidx.arch.core:core-testing:2.1.0"


}
